% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copy_s3_redshift.R
\name{copy_S3_redshift}
\alias{copy_S3_redshift}
\title{Copy data stored in S3 .csv files into redshift table}
\usage{
copy_S3_redshift(env, connection, table_name, bucket_path,
  credentials = Sys.getenv(paste0(env, "_REDSHIFT_IAM_ROLE")),
  role = Sys.getenv(paste0(env, "_REDSHIFT_S3_ROLE")), delimiter = ",",
  region = Sys.getenv(paste0(env, "_REDSHIFT_REGION")),
  ignore_header = "1", dateformat = "auto", null = "NA",
  file_format = "csv")
}
\arguments{
\item{env}{variable for AWS to select specific systems using getenv query}

\item{connection}{RJDBC connection string}

\item{table_name}{name of the table in redshift to copy to}

\item{bucket_path}{name of the S3 bucket the includes the csv to copy}

\item{credentials}{IAM role with access defined in .RProfile}

\item{role}{S3 role with access defined in .RProfile}

\item{delimiter}{identifier for column seperation}

\item{region}{AWS region for redshift cluster defined in .RProfile}

\item{ignore_header}{default ignore header to TRUE}

\item{dateformat}{format for data fields in redshift cluster default 'auto'}

\item{null}{fill value for nulls in redshift}

\item{file_format}{file format to upload/copy/insert}
}
\value{
return TRUE if successful
}
\description{
{
Using function inputs for JDBC connection, redshift table name, and bucket
path, perform copy/insert to redshift
}
}
